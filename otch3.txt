Процессы в linux

Идентификация процессов в OC имеет свой идентификатор
Получить идентификатор процесса можно при помощи системного вызова getpig()
Получить идентификатор родительского процесса можно при помощи системного вызова getppid()
Программа, выводящая на экран идентификаторы текущего и родительского процессов:
oreshok@alexandr-Aspire-Z5751:~$ vim pr003.c

#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
int main() {
        pid_t procid, parentprocid;
        procid = getpid();
        parentprocid = getppid();
        printf("Ид. текущего процесса: %d\nИд. родительского процесса: %d\n", procid, parentprocid);
        return 0;
}
oreshok@alexandr-Aspire-Z5751:~$ gcc pr003.c -o pr003.out
oreshok@alexandr-Aspire-Z5751:~$ ./pr003.out
Ид. текущего процесса: 9131
Ид. родительского процесса: 7902
oreshok@alexandr-Aspire-Z5751:~$ ./pr003.out
Ид. текущего процесса: 9132
Ид. родительского процесса: 7902

При первом запуске программы видим id текущего процесса 9131, id родительского процесса - это id командной оболочки bash.
ПРи втором запуске программы id текущего процесса поменял своё значение, так как аналогичные предыдущие процессы завершились, а новый процесс получил новое значение id - 9132
id  родительского процесса не изменилось, так как для запуск программы по-прежнему использовалась командная оболочка bash.
